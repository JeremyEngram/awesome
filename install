#!/usr/bin/env bash

awesome_dir="$HOME/awesome"
bin_dir="$HOME/bin"
# version="0.0.15"

# check if awesome dir exist. if not create it and add $HOME/awesome path to config file
fn_checkDir() {
    if [[ -z $1 ]]; then
        echo "Specify the directory." >&2
        exit
    fi
    if [[ ! -d $1 ]]; then
        mkdir "$1"
        echo "$1 directory is created." >&2
    fi
}

fn_check_cmd() {
    if [ ! "$(command -v "$1")" ]; then
        echo "Please install $1" >&2
        exit
    fi
}

fn_bash() {
    echo "Install Bash > v4.4"
}

# create a symlink in bin
fn_create_symlink() {
    # find the name of repo
    repo_name=$1
    # add a symlink
    ln -sf "${awesome_dir}/${repo_name}/${repo_name}" "${bin_dir}/${repo_name}"
}

fn_confirm() {
    local dir="$1"
    read -rp "Do you want to ${dir}? yes/y or no/n   " PANS
    ans=$(echo "$PANS" | cut -c 1-1 | tr "[:lower:]" "[:upper:]")
    echo "$ans"
}

fn_find_symlinks() {
    paths=$(find "$bin_dir" -type l)
    echo "$paths"
}

# fn_install run git clone and create a symlink
fn_install() {
    fn_checkDir "$awesome_dir"
    fn_checkDir "$bin_dir"
    fn_check_cmd git
    cd "$awesome_dir" || exit
    url="https://github.com/shinokada/awesome.git"
    repo="awesome"
    { git clone "${url}" && fn_create_symlink "${repo}"; } || eixt
    echo "${repo} installation completed."
    echo "Try ${repo} -h or which ${repo}."
}

# fn_uninstall removes the awesome symlink and repo
fn_uninstall() {
    # echo "Removing awesome repo from ~/awesome dir and a symlink from ~/bin directory."
    # cd "$awesome_dir" || exit
    # repo="awesome"
    # # rm -rf "${repo}" && rm "${bin_dir}/${repo}" || exit
    # echo "Removed awesome dir and symlink."
    # check all symlinks to awesome dir in ~/bin dir
    echo "Finding symlinks ..."
    # links=($(fn_find_symlinks))
    mapfile -t links < <(fn_find_symlinks)
    # echo "links are : ${links[@]}"
    echo "${#links[@]}"
    if (("${#links[@]}" > 0)); then
        # confirm if you want to remove all symlinks in bin dir
        confirm_symlink=$(fn_confirm "remove all symlinks in bin directory")
        if [[ "$confirm_symlink" = "Y" ]]; then
            for link in "${links[@]}"; do
                # unlink "$link"
                # echo $link
                echo "Removed the ${link} symlink."
            done
        fi
    else
        echo "in else statement."
    fi
    echo "No more symlinks."

    # confirm if a user want to remove ~/awesome dir
    confirm_remove=$(fn_confirm "remove awesome directory")
    if [[ "$confirm_remove" = "Y" ]]; then
        # rm -rf "$awesome_dir"
        echo "Uninstalled awesome directory."
    else
        echo "remove awesome else statement."
    fi
    exit
}

fn_main() {
    if [ $# -eq 1 ]; then
        case $1 in
        "install")
            fn_install
            ;;
        "uninstall")
            fn_uninstall
            ;;
        "say")
            fn_say
            ;;
        esac
    else
        echo "Something wrong."
        exit 1
    fi
}

fn_main "$@"
